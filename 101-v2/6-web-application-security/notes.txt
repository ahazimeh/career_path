server computer that serves a service
service apache2 start
  network bridged

openssh-server
  service ssh start
  service ssh status
  on client: ssh kali@ip_address

netstat -tuln

dns demo:
  etc/hosts // locally and not dns record
  apt-get install dnsmasq
  vi /etc/dnsmasq.conf
  section: add domains which you want to force to an Ip address here.
  address
  service dnsmasq start
  then update the main wifi configuration to use my dns server rather than the dhcp

--------------------------------------------------
skipped web2.0 // skipped hosting as well
--------------------------------------------------
api key
  -used for identification
  -authentication
  security measures:
    -public private key encryption on requests being sent to prevent api leaks
    -ip whitelisting

google dorking:
  site: tells google to search for results from a certain site only
  inurl: search for pages with a URL that matches the search string. // inurl:"admin/default.aspx"
  intitle: find specific string in page title
  wildcard(*): means any character or series of characters
  "": exact match
  OR(|): or operations // "xss" site:(owasp.org | portswigger.net)
  MINUS (-) // exclude
  filetype:pdf
  ex:
    intitle: "login" site:semicolonlb.com
    site:semicolonlb.com filetype pdf
    "username"|"password" site:semicolonlb.com
    site:semicolonlb.com inurl: "/admin"

Directory Brute Forcing
  gobuster dir -u https://semicolonlb.com -w /usr/share/wordlists/dirb/big.txt

http://burp // download certificate
  in browser
    setting, security and privacy
      security
        manage device certificate
          trusted root certification authorities
            import
              next
                browser
                  certificate

attacking access controls
  vertical, horizonal, context-dependent (ex: after paying I can't update the cart)

xss
  use html events onmouseover, onmouseout, ...

sql injection
  error based:
    admin'--
    username='' OR 1=1
  union based:
    select course_title from courses where instructor='majd' union select password from users--' and published = 1
    same number of columns
    same data types
    same order
    union select null --
    union select null,null --
    ... , keep trying until the query succeed
    to determine the datatype of each column
      union select 'a', null,null --
      to determine the columns and the tabless names:
      union select table_name, column_name, null from information_schema.columns --
